Problems with Inheritance:

Recap:
Code reuse with inheritance and Composition

PresentationObject contained a common code which is inherited by Text, Table and Image classes [Inheritance]
Logger Class has some functionality which is used in both DBMigrator and Installer

Problems with Inheritance:

1. Large hierarchy of classes
2. Tight coupling

Example:

There is a class Named Animal which contains the fields Age:int and methods Eat() and Sleep()
This is inherited by both Person class and Dog Class...
Now consider we have to add Walk() to the Person and Dog as they both have Walk() we added it to the Animal
Now we added GoldFish to Animal....But the problem is it cannot walk
	
	So the hierarchy needs to be changed..

Note: Any Inheritance can be translated to composition...

Benifits of composition:

1. Great Flexibility
2. Loose coupling

Extra benifit: In composition we can replace class with interface....


Summary:

2 types of relationships between classes:

Inheritance (Is-A)
Composition (Has-A)

Inheritance:

Pros: Code reuse, easy to understand
Cons: Tight coupling

Composition:

Pros: Flexibility, Loose coupling
Cons: A little hard to understand...


Use both Inheritance and Composition accordingly....based on requirement...